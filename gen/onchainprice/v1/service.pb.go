// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: onchainprice/v1/service.proto

package onchainpricev1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PriceType ...
type PriceType int32

const (
	PriceType_PRICE_TYPE_UNSPECIFIED PriceType = 0
	PriceType_PRICE_TYPE_BUY         PriceType = 1
	PriceType_PRICE_TYPE_SELL        PriceType = 2
)

// Enum value maps for PriceType.
var (
	PriceType_name = map[int32]string{
		0: "PRICE_TYPE_UNSPECIFIED",
		1: "PRICE_TYPE_BUY",
		2: "PRICE_TYPE_SELL",
	}
	PriceType_value = map[string]int32{
		"PRICE_TYPE_UNSPECIFIED": 0,
		"PRICE_TYPE_BUY":         1,
		"PRICE_TYPE_SELL":        2,
	}
)

func (x PriceType) Enum() *PriceType {
	p := new(PriceType)
	*p = x
	return p
}

func (x PriceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PriceType) Descriptor() protoreflect.EnumDescriptor {
	return file_onchainprice_v1_service_proto_enumTypes[0].Descriptor()
}

func (PriceType) Type() protoreflect.EnumType {
	return &file_onchainprice_v1_service_proto_enumTypes[0]
}

func (x PriceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PriceType.Descriptor instead.
func (PriceType) EnumDescriptor() ([]byte, []int) {
	return file_onchainprice_v1_service_proto_rawDescGZIP(), []int{0}
}

// ListPricesRequest defines a get price request
type ListPricesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tokens    []string               `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty"`
	Quotes    []string               `protobuf:"bytes,2,rep,name=quotes,proto3" json:"quotes,omitempty"`
	Debug     bool                   `protobuf:"varint,3,opt,name=debug,proto3" json:"debug,omitempty"`
	FieldMask *fieldmaskpb.FieldMask `protobuf:"bytes,4,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
}

func (x *ListPricesRequest) Reset() {
	*x = ListPricesRequest{}
	mi := &file_onchainprice_v1_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPricesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPricesRequest) ProtoMessage() {}

func (x *ListPricesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_onchainprice_v1_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPricesRequest.ProtoReflect.Descriptor instead.
func (*ListPricesRequest) Descriptor() ([]byte, []int) {
	return file_onchainprice_v1_service_proto_rawDescGZIP(), []int{0}
}

func (x *ListPricesRequest) GetTokens() []string {
	if x != nil {
		return x.Tokens
	}
	return nil
}

func (x *ListPricesRequest) GetQuotes() []string {
	if x != nil {
		return x.Quotes
	}
	return nil
}

func (x *ListPricesRequest) GetDebug() bool {
	if x != nil {
		return x.Debug
	}
	return false
}

func (x *ListPricesRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

// ListPricesResponse defines a get price response
type ListPricesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result  *ListPricesResult `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ListPricesResponse) Reset() {
	*x = ListPricesResponse{}
	mi := &file_onchainprice_v1_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPricesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPricesResponse) ProtoMessage() {}

func (x *ListPricesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_onchainprice_v1_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPricesResponse.ProtoReflect.Descriptor instead.
func (*ListPricesResponse) Descriptor() ([]byte, []int) {
	return file_onchainprice_v1_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListPricesResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListPricesResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListPricesResponse) GetResult() *ListPricesResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// ListPricesResult contains result of getting prices.
type ListPricesResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prices []*PriceInfo `protobuf:"bytes,1,rep,name=prices,proto3" json:"prices,omitempty"`
}

func (x *ListPricesResult) Reset() {
	*x = ListPricesResult{}
	mi := &file_onchainprice_v1_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPricesResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPricesResult) ProtoMessage() {}

func (x *ListPricesResult) ProtoReflect() protoreflect.Message {
	mi := &file_onchainprice_v1_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPricesResult.ProtoReflect.Descriptor instead.
func (*ListPricesResult) Descriptor() ([]byte, []int) {
	return file_onchainprice_v1_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListPricesResult) GetPrices() []*PriceInfo {
	if x != nil {
		return x.Prices
	}
	return nil
}

// PriceInfo includes price information.
type PriceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// address is token's address.
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// buy is token's buy price.
	Buy []*PriceDetail `protobuf:"bytes,2,rep,name=buy,proto3" json:"buy,omitempty"`
	// sell is token's sell price.
	Sell []*PriceDetail `protobuf:"bytes,3,rep,name=sell,proto3" json:"sell,omitempty"`
}

func (x *PriceInfo) Reset() {
	*x = PriceInfo{}
	mi := &file_onchainprice_v1_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PriceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceInfo) ProtoMessage() {}

func (x *PriceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_onchainprice_v1_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceInfo.ProtoReflect.Descriptor instead.
func (*PriceInfo) Descriptor() ([]byte, []int) {
	return file_onchainprice_v1_service_proto_rawDescGZIP(), []int{3}
}

func (x *PriceInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *PriceInfo) GetBuy() []*PriceDetail {
	if x != nil {
		return x.Buy
	}
	return nil
}

func (x *PriceInfo) GetSell() []*PriceDetail {
	if x != nil {
		return x.Sell
	}
	return nil
}

// PriceInfo includes price information.
type PriceDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// type is price's type (buy or sell).
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// quote is the quote currency that the price is calculated by.
	Quote string `protobuf:"bytes,2,opt,name=quote,proto3" json:"quote,omitempty"`
	// price_by_quote is token's price in quote currency.
	PriceByQuote string `protobuf:"bytes,3,opt,name=price_by_quote,json=priceByQuote,proto3" json:"price_by_quote,omitempty"`
	// updated_at is the time when price is updated.
	UpdatedAt int64 `protobuf:"varint,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// amount_out is the amount of token which can be bought by a pre-configured amount of quote token.
	AmountOut string `protobuf:"bytes,5,opt,name=amount_out,json=amountOut,proto3" json:"amount_out,omitempty"`
	// traced_tokens is list of tokens which are used to calculate price.
	TracedTokens []string `protobuf:"bytes,6,rep,name=traced_tokens,json=tracedTokens,proto3" json:"traced_tokens,omitempty"`
	// traced_pools is list of pools which are used to calculate price.
	TracedPools []string `protobuf:"bytes,7,rep,name=traced_pools,json=tracedPools,proto3" json:"traced_pools,omitempty"`
	// traced_amounts is list of amounts of tokens which are used to calculate price.
	TracedAmounts []string `protobuf:"bytes,8,rep,name=traced_amounts,json=tracedAmounts,proto3" json:"traced_amounts,omitempty"`
}

func (x *PriceDetail) Reset() {
	*x = PriceDetail{}
	mi := &file_onchainprice_v1_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PriceDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceDetail) ProtoMessage() {}

func (x *PriceDetail) ProtoReflect() protoreflect.Message {
	mi := &file_onchainprice_v1_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceDetail.ProtoReflect.Descriptor instead.
func (*PriceDetail) Descriptor() ([]byte, []int) {
	return file_onchainprice_v1_service_proto_rawDescGZIP(), []int{4}
}

func (x *PriceDetail) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PriceDetail) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *PriceDetail) GetPriceByQuote() string {
	if x != nil {
		return x.PriceByQuote
	}
	return ""
}

func (x *PriceDetail) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *PriceDetail) GetAmountOut() string {
	if x != nil {
		return x.AmountOut
	}
	return ""
}

func (x *PriceDetail) GetTracedTokens() []string {
	if x != nil {
		return x.TracedTokens
	}
	return nil
}

func (x *PriceDetail) GetTracedPools() []string {
	if x != nil {
		return x.TracedPools
	}
	return nil
}

func (x *PriceDetail) GetTracedAmounts() []string {
	if x != nil {
		return x.TracedAmounts
	}
	return nil
}

// GetPriceUSDRequest defines a get price usd request
type GetPriceUSDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GetPriceUSDRequest) Reset() {
	*x = GetPriceUSDRequest{}
	mi := &file_onchainprice_v1_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPriceUSDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPriceUSDRequest) ProtoMessage() {}

func (x *GetPriceUSDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_onchainprice_v1_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPriceUSDRequest.ProtoReflect.Descriptor instead.
func (*GetPriceUSDRequest) Descriptor() ([]byte, []int) {
	return file_onchainprice_v1_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetPriceUSDRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// GetPriceUSDResponse defines a get price usd response
type GetPriceUSDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// address is token's address.
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// string is the symbol of token.
	Symbol string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// price is token's price in USD.
	Price string `protobuf:"bytes,3,opt,name=price,proto3" json:"price,omitempty"`
	// updated_at is the time when price is updated.
	UpdatedAt int64 `protobuf:"varint,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *GetPriceUSDResponse) Reset() {
	*x = GetPriceUSDResponse{}
	mi := &file_onchainprice_v1_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPriceUSDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPriceUSDResponse) ProtoMessage() {}

func (x *GetPriceUSDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_onchainprice_v1_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPriceUSDResponse.ProtoReflect.Descriptor instead.
func (*GetPriceUSDResponse) Descriptor() ([]byte, []int) {
	return file_onchainprice_v1_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetPriceUSDResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *GetPriceUSDResponse) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *GetPriceUSDResponse) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *GetPriceUSDResponse) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

// ListSupportedQuotesResponse defines a list supported quotes response
type ListSupportedQuotesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Quotes []string `protobuf:"bytes,3,rep,name=quotes,proto3" json:"quotes,omitempty"`
}

func (x *ListSupportedQuotesResponse) Reset() {
	*x = ListSupportedQuotesResponse{}
	mi := &file_onchainprice_v1_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSupportedQuotesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSupportedQuotesResponse) ProtoMessage() {}

func (x *ListSupportedQuotesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_onchainprice_v1_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSupportedQuotesResponse.ProtoReflect.Descriptor instead.
func (*ListSupportedQuotesResponse) Descriptor() ([]byte, []int) {
	return file_onchainprice_v1_service_proto_rawDescGZIP(), []int{7}
}

func (x *ListSupportedQuotesResponse) GetQuotes() []string {
	if x != nil {
		return x.Quotes
	}
	return nil
}

// ListHistoricalPricesRequest ...
type ListHistoricalPricesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tokens []string `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty"`
	Quote  string   `protobuf:"bytes,2,opt,name=quote,proto3" json:"quote,omitempty"`
	// if clients pass this filed, server will return price that nearest this time.
	Timestamp uint64 `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *ListHistoricalPricesRequest) Reset() {
	*x = ListHistoricalPricesRequest{}
	mi := &file_onchainprice_v1_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListHistoricalPricesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHistoricalPricesRequest) ProtoMessage() {}

func (x *ListHistoricalPricesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_onchainprice_v1_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHistoricalPricesRequest.ProtoReflect.Descriptor instead.
func (*ListHistoricalPricesRequest) Descriptor() ([]byte, []int) {
	return file_onchainprice_v1_service_proto_rawDescGZIP(), []int{8}
}

func (x *ListHistoricalPricesRequest) GetTokens() []string {
	if x != nil {
		return x.Tokens
	}
	return nil
}

func (x *ListHistoricalPricesRequest) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *ListHistoricalPricesRequest) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// ListHistoricalPricesResponse ...
type ListHistoricalPricesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ListHistoricalPricesResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ListHistoricalPricesResponse) Reset() {
	*x = ListHistoricalPricesResponse{}
	mi := &file_onchainprice_v1_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListHistoricalPricesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHistoricalPricesResponse) ProtoMessage() {}

func (x *ListHistoricalPricesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_onchainprice_v1_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHistoricalPricesResponse.ProtoReflect.Descriptor instead.
func (*ListHistoricalPricesResponse) Descriptor() ([]byte, []int) {
	return file_onchainprice_v1_service_proto_rawDescGZIP(), []int{9}
}

func (x *ListHistoricalPricesResponse) GetResult() *ListHistoricalPricesResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// ListHistoricalPricesResult ...
type ListHistoricalPricesResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prices []*ListHistoricalItem `protobuf:"bytes,1,rep,name=prices,proto3" json:"prices,omitempty"`
}

func (x *ListHistoricalPricesResult) Reset() {
	*x = ListHistoricalPricesResult{}
	mi := &file_onchainprice_v1_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListHistoricalPricesResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHistoricalPricesResult) ProtoMessage() {}

func (x *ListHistoricalPricesResult) ProtoReflect() protoreflect.Message {
	mi := &file_onchainprice_v1_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHistoricalPricesResult.ProtoReflect.Descriptor instead.
func (*ListHistoricalPricesResult) Descriptor() ([]byte, []int) {
	return file_onchainprice_v1_service_proto_rawDescGZIP(), []int{10}
}

func (x *ListHistoricalPricesResult) GetPrices() []*ListHistoricalItem {
	if x != nil {
		return x.Prices
	}
	return nil
}

// ListHistoricalItem ...
type ListHistoricalItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string                           `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Values  []*ListHistoricalItem_PriceValue `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *ListHistoricalItem) Reset() {
	*x = ListHistoricalItem{}
	mi := &file_onchainprice_v1_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListHistoricalItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHistoricalItem) ProtoMessage() {}

func (x *ListHistoricalItem) ProtoReflect() protoreflect.Message {
	mi := &file_onchainprice_v1_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHistoricalItem.ProtoReflect.Descriptor instead.
func (*ListHistoricalItem) Descriptor() ([]byte, []int) {
	return file_onchainprice_v1_service_proto_rawDescGZIP(), []int{11}
}

func (x *ListHistoricalItem) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ListHistoricalItem) GetValues() []*ListHistoricalItem_PriceValue {
	if x != nil {
		return x.Values
	}
	return nil
}

// PriceValue ...
type ListHistoricalItem_PriceValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price     string    `protobuf:"bytes,1,opt,name=price,proto3" json:"price,omitempty"`
	Quote     string    `protobuf:"bytes,2,opt,name=quote,proto3" json:"quote,omitempty"`
	Type      PriceType `protobuf:"varint,3,opt,name=type,proto3,enum=onchainprice.v1.PriceType" json:"type,omitempty"`
	Timestamp uint64    `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *ListHistoricalItem_PriceValue) Reset() {
	*x = ListHistoricalItem_PriceValue{}
	mi := &file_onchainprice_v1_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListHistoricalItem_PriceValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHistoricalItem_PriceValue) ProtoMessage() {}

func (x *ListHistoricalItem_PriceValue) ProtoReflect() protoreflect.Message {
	mi := &file_onchainprice_v1_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHistoricalItem_PriceValue.ProtoReflect.Descriptor instead.
func (*ListHistoricalItem_PriceValue) Descriptor() ([]byte, []int) {
	return file_onchainprice_v1_service_proto_rawDescGZIP(), []int{11, 0}
}

func (x *ListHistoricalItem_PriceValue) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *ListHistoricalItem_PriceValue) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *ListHistoricalItem_PriceValue) GetType() PriceType {
	if x != nil {
		return x.Type
	}
	return PriceType_PRICE_TYPE_UNSPECIFIED
}

func (x *ListHistoricalItem_PriceValue) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

var File_onchainprice_v1_service_proto protoreflect.FileDescriptor

var file_onchainprice_v1_service_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x6f, 0x6e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0f, 0x6f, 0x6e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xac, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22,
	0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0a,
	0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x64, 0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x64, 0x52, 0x06,
	0x71, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x12, 0x39, 0x0a, 0x0a,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x09, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x7d, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x6e,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x46, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x6e, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x22, 0x87,
	0x01, 0x0a, 0x09, 0x50, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2e, 0x0a, 0x03, 0x62, 0x75, 0x79, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x6e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x03, 0x62, 0x75, 0x79, 0x12, 0x30, 0x0a, 0x04, 0x73, 0x65, 0x6c, 0x6c, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x6e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x04, 0x73, 0x65, 0x6c, 0x6c, 0x22, 0x8a, 0x02, 0x0a, 0x0b, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x6f,
	0x74, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x62, 0x79, 0x5f, 0x71,
	0x75, 0x6f, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x42, 0x79, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x6f, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x63, 0x65, 0x64,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x64, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x63, 0x65, 0x64, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x12, 0x25,
	0x0a, 0x0e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x63, 0x65, 0x64, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x4a, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x55, 0x53, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1a, 0xfa, 0x42,
	0x17, 0x72, 0x15, 0x32, 0x13, 0x5e, 0x30, 0x78, 0x5b, 0x30, 0x2d, 0x39, 0x61, 0x2d, 0x66, 0x41,
	0x2d, 0x46, 0x5d, 0x7b, 0x34, 0x30, 0x7d, 0x24, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0x7c, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x53, 0x44,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0x35, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x51, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x71, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x22, 0x91, 0x01, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01,
	0x10, 0x64, 0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x71, 0x75,
	0x6f, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1a, 0xfa, 0x42, 0x17, 0x72, 0x15,
	0x32, 0x13, 0x5e, 0x30, 0x78, 0x5b, 0x30, 0x2d, 0x39, 0x41, 0x2d, 0x5a, 0x61, 0x2d, 0x7a, 0x5d,
	0x7b, 0x34, 0x30, 0x7d, 0x24, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x63, 0x0a, 0x1c, 0x4c, 0x69,
	0x73, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6f, 0x6e, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x59, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61,
	0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3b, 0x0a,
	0x06, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x6f, 0x6e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x06, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x22, 0xff, 0x01, 0x0a, 0x12, 0x4c,
	0x69, 0x73, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x46, 0x0a, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6f, 0x6e,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d,
	0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x1a, 0x86, 0x01, 0x0a, 0x0a, 0x50, 0x72, 0x69, 0x63, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x2e,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6f,
	0x6e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2a, 0x50, 0x0a, 0x09,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x52, 0x49,
	0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x52, 0x49, 0x43, 0x45, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x42, 0x55, 0x59, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x52, 0x49,
	0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x45, 0x4c, 0x4c, 0x10, 0x02, 0x32, 0xa0,
	0x03, 0x0a, 0x13, 0x4f, 0x6e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x57, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x73, 0x12, 0x22, 0x2e, 0x6f, 0x6e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6f, 0x6e, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x75, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61,
	0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x12, 0x2c, 0x2e, 0x6f, 0x6e, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6f, 0x6e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x55, 0x53, 0x44, 0x12, 0x23, 0x2e, 0x6f, 0x6e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x55, 0x53, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6f, 0x6e, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x53, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5d, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x65, 0x64, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x2c, 0x2e, 0x6f, 0x6e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0xcd, 0x01, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x6e, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4b, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4b, 0x79, 0x62, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x6f, 0x6e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x6f, 0x6e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x4f, 0x58, 0x58, 0xaa, 0x02, 0x0f, 0x4f,
	0x6e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02,
	0x0f, 0x4f, 0x6e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5c, 0x56, 0x31,
	0xe2, 0x02, 0x1b, 0x4f, 0x6e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5c,
	0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x10, 0x4f, 0x6e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x3a, 0x3a, 0x56,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_onchainprice_v1_service_proto_rawDescOnce sync.Once
	file_onchainprice_v1_service_proto_rawDescData = file_onchainprice_v1_service_proto_rawDesc
)

func file_onchainprice_v1_service_proto_rawDescGZIP() []byte {
	file_onchainprice_v1_service_proto_rawDescOnce.Do(func() {
		file_onchainprice_v1_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_onchainprice_v1_service_proto_rawDescData)
	})
	return file_onchainprice_v1_service_proto_rawDescData
}

var file_onchainprice_v1_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_onchainprice_v1_service_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_onchainprice_v1_service_proto_goTypes = []any{
	(PriceType)(0),                        // 0: onchainprice.v1.PriceType
	(*ListPricesRequest)(nil),             // 1: onchainprice.v1.ListPricesRequest
	(*ListPricesResponse)(nil),            // 2: onchainprice.v1.ListPricesResponse
	(*ListPricesResult)(nil),              // 3: onchainprice.v1.ListPricesResult
	(*PriceInfo)(nil),                     // 4: onchainprice.v1.PriceInfo
	(*PriceDetail)(nil),                   // 5: onchainprice.v1.PriceDetail
	(*GetPriceUSDRequest)(nil),            // 6: onchainprice.v1.GetPriceUSDRequest
	(*GetPriceUSDResponse)(nil),           // 7: onchainprice.v1.GetPriceUSDResponse
	(*ListSupportedQuotesResponse)(nil),   // 8: onchainprice.v1.ListSupportedQuotesResponse
	(*ListHistoricalPricesRequest)(nil),   // 9: onchainprice.v1.ListHistoricalPricesRequest
	(*ListHistoricalPricesResponse)(nil),  // 10: onchainprice.v1.ListHistoricalPricesResponse
	(*ListHistoricalPricesResult)(nil),    // 11: onchainprice.v1.ListHistoricalPricesResult
	(*ListHistoricalItem)(nil),            // 12: onchainprice.v1.ListHistoricalItem
	(*ListHistoricalItem_PriceValue)(nil), // 13: onchainprice.v1.ListHistoricalItem.PriceValue
	(*fieldmaskpb.FieldMask)(nil),         // 14: google.protobuf.FieldMask
	(*emptypb.Empty)(nil),                 // 15: google.protobuf.Empty
}
var file_onchainprice_v1_service_proto_depIdxs = []int32{
	14, // 0: onchainprice.v1.ListPricesRequest.field_mask:type_name -> google.protobuf.FieldMask
	3,  // 1: onchainprice.v1.ListPricesResponse.result:type_name -> onchainprice.v1.ListPricesResult
	4,  // 2: onchainprice.v1.ListPricesResult.prices:type_name -> onchainprice.v1.PriceInfo
	5,  // 3: onchainprice.v1.PriceInfo.buy:type_name -> onchainprice.v1.PriceDetail
	5,  // 4: onchainprice.v1.PriceInfo.sell:type_name -> onchainprice.v1.PriceDetail
	11, // 5: onchainprice.v1.ListHistoricalPricesResponse.result:type_name -> onchainprice.v1.ListHistoricalPricesResult
	12, // 6: onchainprice.v1.ListHistoricalPricesResult.prices:type_name -> onchainprice.v1.ListHistoricalItem
	13, // 7: onchainprice.v1.ListHistoricalItem.values:type_name -> onchainprice.v1.ListHistoricalItem.PriceValue
	0,  // 8: onchainprice.v1.ListHistoricalItem.PriceValue.type:type_name -> onchainprice.v1.PriceType
	1,  // 9: onchainprice.v1.OnchainPriceService.ListPrices:input_type -> onchainprice.v1.ListPricesRequest
	9,  // 10: onchainprice.v1.OnchainPriceService.ListHistoricalPrices:input_type -> onchainprice.v1.ListHistoricalPricesRequest
	6,  // 11: onchainprice.v1.OnchainPriceService.GetPriceUSD:input_type -> onchainprice.v1.GetPriceUSDRequest
	15, // 12: onchainprice.v1.OnchainPriceService.ListSupportedQuotes:input_type -> google.protobuf.Empty
	2,  // 13: onchainprice.v1.OnchainPriceService.ListPrices:output_type -> onchainprice.v1.ListPricesResponse
	10, // 14: onchainprice.v1.OnchainPriceService.ListHistoricalPrices:output_type -> onchainprice.v1.ListHistoricalPricesResponse
	7,  // 15: onchainprice.v1.OnchainPriceService.GetPriceUSD:output_type -> onchainprice.v1.GetPriceUSDResponse
	8,  // 16: onchainprice.v1.OnchainPriceService.ListSupportedQuotes:output_type -> onchainprice.v1.ListSupportedQuotesResponse
	13, // [13:17] is the sub-list for method output_type
	9,  // [9:13] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_onchainprice_v1_service_proto_init() }
func file_onchainprice_v1_service_proto_init() {
	if File_onchainprice_v1_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_onchainprice_v1_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_onchainprice_v1_service_proto_goTypes,
		DependencyIndexes: file_onchainprice_v1_service_proto_depIdxs,
		EnumInfos:         file_onchainprice_v1_service_proto_enumTypes,
		MessageInfos:      file_onchainprice_v1_service_proto_msgTypes,
	}.Build()
	File_onchainprice_v1_service_proto = out.File
	file_onchainprice_v1_service_proto_rawDesc = nil
	file_onchainprice_v1_service_proto_goTypes = nil
	file_onchainprice_v1_service_proto_depIdxs = nil
}
